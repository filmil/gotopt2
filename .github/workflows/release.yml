name: Release
on:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["386", "amd64"]
        os: ["linux"]
    steps:
      - name: Setup bazel
        uses: abhinavsingh/setup-bazel@v3
        with:
          version: 8.1.1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v4
        with:
          path: "~/.cache/bazel"
          key: ${{ runner.os }}-${{ matrix.arch }}-bazel-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-bazel-
      - name: "Test"
        run: "bazel test --test_output=errors //..."
      - name: "Build binaries for ${{ matrix.os }}_${{ matrix.arch }}"
        run: "bazel build --platforms=@io_bazel_rules_go//go/toolchain:${{ matrix.os }}_${{ matrix.arch}} --//cmd/gotopt2:name_part_from_command_line=${{ matrix.os }}-${{ matrix.arch }} //cmd/gotopt2:zip"
      - name: "Publish ${{ matrix.os }}_${{ matrix.arch }}"
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          artifacts: "bazel-bin/cmd/gotopt2/gotopt2-${{ matrix.os }}-${{ matrix.arch }}.zip"
  source-archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get release tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Get repo name
        id: get_repo_name
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      - name: Create source archive
        run: |
          tar -czf ${{ env.REPO_NAME }}-${{ env.VERSION }}.tar.gz \
            --transform='s,^,${{ env.REPO_NAME }}-${{ env.VERSION }}/,' \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='bazel-*' \
            .
      - name: "Publish source archive"
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          artifacts: "${{ env.REPO_NAME }}-${{ env.VERSION }}.tar.gz"

